{"remainingRequest":"/home/mohammad/Documents/Servicio/api-apply/node_modules/babel-loader/lib/index.js!/home/mohammad/Documents/Servicio/api-apply/src/axios/index.js","dependencies":[{"path":"/home/mohammad/Documents/Servicio/api-apply/src/axios/index.js","mtime":1628766097000},{"path":"/home/mohammad/Documents/Servicio/api-apply/node_modules/cache-loader/dist/cjs.js","mtime":1629358254824},{"path":"/home/mohammad/Documents/Servicio/api-apply/node_modules/babel-loader/lib/index.js","mtime":1629358255792}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKaW1wb3J0IHN0b3JlIGZyb20gJ0Avc3RvcmUnOwp2YXIgYmFzZVVybCA9ICJodHRwczovL2FwaS5ic2NhcGkuY29tIjsKdmFyIGF4aW9zSW5zdGFuY2UgPSBheGlvcy5jcmVhdGUoewogIGhlYWRlcnM6IHsKICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicKICB9Cn0pOyAvLyBheGlvc0luc3RhbmNlLmludGVyY2VwdG9ycy5yZXF1ZXN0LnVzZSgKLy8gICBjb25maWcgPT4gewovLyAgICAgbGV0IHRva2VuID0gc3RvcmUuZ2V0dGVyc1snVVNFUi90b2tlbiddCi8vICAgICBpZih0b2tlbikgY29uZmlnLmhlYWRlcnNbIkF1dGhvcml6YXRpb24iXSA9ICdCZWFyZXIgJyArIHRva2VuCi8vICAgICByZXR1cm4gY29uZmlnCi8vICAgfSwKLy8gICBlcnJvciA9PiBQcm9taXNlLnJlamVjdChlcnJvcikKLy8gKQoKZXhwb3J0IGRlZmF1bHQgewogIHJlcUFwaTogZnVuY3Rpb24gcmVxQXBpKHVybCkgewogICAgcmV0dXJuIHsKICAgICAgcG9zdDogZnVuY3Rpb24gcG9zdChkYXRhKSB7CiAgICAgICAgcmV0dXJuIGF4aW9zSW5zdGFuY2UucG9zdChiYXNlVXJsICsgdXJsLCBkYXRhKTsKICAgICAgfSwKICAgICAgcG9zdFdpdGhDdXN0b21IZWFkZXI6IGZ1bmN0aW9uIHBvc3RXaXRoQ3VzdG9tSGVhZGVyKGRhdGEsIG9wdGlvbnMpIHsKICAgICAgICByZXR1cm4gYXhpb3NJbnN0YW5jZS5wb3N0KGJhc2VVcmwgKyB1cmwsIGRhdGEsIG9wdGlvbnMpOwogICAgICB9LAogICAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHsKICAgICAgICByZXR1cm4gYXhpb3NJbnN0YW5jZS5nZXQoYmFzZVVybCArIHVybCk7CiAgICAgIH0sCiAgICAgIHB1dDogZnVuY3Rpb24gcHV0KGRhdGEpIHsKICAgICAgICByZXR1cm4gYXhpb3NJbnN0YW5jZS5wdXQoYmFzZVVybCArIHVybCwgZGF0YSk7CiAgICAgIH0sCiAgICAgIHBhdGNoOiBmdW5jdGlvbiBwYXRjaChkYXRhKSB7CiAgICAgICAgcmV0dXJuIGF4aW9zSW5zdGFuY2UucGF0Y2goYmFzZVVybCArIHVybCwgZGF0YSk7CiAgICAgIH0sCiAgICAgIGRlbGV0ZTogZnVuY3Rpb24gX2RlbGV0ZShkYXRhKSB7CiAgICAgICAgcmV0dXJuIGF4aW9zSW5zdGFuY2UuZGVsZXRlKGJhc2VVcmwgKyB1cmwsIHsKICAgICAgICAgIGRhdGE6IGRhdGEKICAgICAgICB9KTsKICAgICAgfQogICAgfTsKICB9Cn07"},{"version":3,"sources":["/home/mohammad/Documents/Servicio/api-apply/src/axios/index.js"],"names":["axios","store","baseUrl","axiosInstance","create","headers","reqApi","url","post","data","postWithCustomHeader","options","get","put","patch","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,IAAMC,OAAO,GAAG,wBAAhB;AAEA,IAAMC,aAAa,GAAGH,KAAK,CAACI,MAAN,CAAa;AACjCC,EAAAA,OAAO,EAAC;AACN,oBAAgB;AADV;AADyB,CAAb,CAAtB,C,CAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe;AACbC,EAAAA,MAAM,EAAE,gBAAAC,GAAG;AAAA,WAAK;AACdC,MAAAA,IAAI,EAAE,cAAAC,IAAI;AAAA,eAAIN,aAAa,CAACK,IAAd,CAAmBN,OAAO,GAAGK,GAA7B,EAAkCE,IAAlC,CAAJ;AAAA,OADI;AAEdC,MAAAA,oBAAoB,EAAE,8BAACD,IAAD,EAAOE,OAAP;AAAA,eAAmBR,aAAa,CAACK,IAAd,CAAmBN,OAAO,GAAGK,GAA7B,EAAkCE,IAAlC,EAAwCE,OAAxC,CAAnB;AAAA,OAFR;AAGdC,MAAAA,GAAG,EAAE;AAAA,eAAMT,aAAa,CAACS,GAAd,CAAkBV,OAAO,GAAGK,GAA5B,CAAN;AAAA,OAHS;AAIdM,MAAAA,GAAG,EAAE,aAAAJ,IAAI;AAAA,eAAIN,aAAa,CAACU,GAAd,CAAkBX,OAAO,GAAGK,GAA5B,EAAiCE,IAAjC,CAAJ;AAAA,OAJK;AAKdK,MAAAA,KAAK,EAAE,eAAAL,IAAI;AAAA,eAAIN,aAAa,CAACW,KAAd,CAAoBZ,OAAO,GAAGK,GAA9B,EAAmCE,IAAnC,CAAJ;AAAA,OALG;AAMdM,MAAAA,MAAM,EAAE,iBAAAN,IAAI;AAAA,eAAIN,aAAa,CAACY,MAAd,CAAqBb,OAAO,GAAGK,GAA/B,EAAoC;AAACE,UAAAA,IAAI,EAAJA;AAAD,SAApC,CAAJ;AAAA;AANE,KAAL;AAAA;AADE,CAAf","sourcesContent":["import axios from 'axios'\nimport store from '@/store'\n\nconst baseUrl = \"https://api.bscapi.com\"\n\nconst axiosInstance = axios.create({\n  headers:{\n    'Content-Type': 'application/json'\n  }\n})\n\n// axiosInstance.interceptors.request.use(\n//   config => {\n//     let token = store.getters['USER/token']\n//     if(token) config.headers[\"Authorization\"] = 'Bearer ' + token\n//     return config\n//   },\n//   error => Promise.reject(error)\n// )\n\nexport default {\n  reqApi: url => ({\n    post: data => axiosInstance.post(baseUrl + url, data),\n    postWithCustomHeader: (data, options) => axiosInstance.post(baseUrl + url, data, options),\n    get: () => axiosInstance.get(baseUrl + url),\n    put: data => axiosInstance.put(baseUrl + url, data),\n    patch: data => axiosInstance.patch(baseUrl + url, data),\n    delete: data => axiosInstance.delete(baseUrl + url, {data}),\n  }),\n}"]}]}